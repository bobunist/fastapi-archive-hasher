[tool.poetry]
name = "fastapi-archive-hasher"
version = "0.1.0"
description = "Project description"
authors = ["kong zi <ivankovichna@mail.ru>", "Radium, LLC"]
readme = "README.md"
license = "ISC"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.111.1"
pydantic-settings = "^2.3.4"
aiohttp = "^3.9.5"
aiofiles = "^24.1.0"
singleton-package = "^0.6.0"
coverage = "^7.6.0"
pytest-asyncio = "^0.23.8"
pytest-lazy-fixture = "^0.6.3"
uvicorn = "^0.30.5"
pytest-env = "^1.1.3"


[tool.poetry.group]
[tool.poetry.group.dev.dependencies]
flake8-pytest-style = "^1.7.2"
flake8-annotations = "^3.0.1"
flake8-logging-format = "^0.9.0"
flake8-spellcheck = "^0.28.0"
isort = "^5.7.0"
flake8 = "^7.1.0"
nitpick = "^0.35.0"
wemake-python-styleguide = "^0.18.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pytest-sugar = "^0.9.7"
Faker = "^20.1.0"
pytest-snapshot = "^0.9.0"

[tool.poetry.group.test.dependencies.pytest-xdist]
extras = ["psutil"]
version = "^3.5.0"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true

[tool.pytest.ini_options]
env = [
  "REPO_URL=https://github.com/nsidnev/fastapi-realworld-example-app/archive/refs/heads/master.zip",
]
pythonpath = ["."]
testpaths = ["tests"]
python_files = "test*.py"
addopts = "-rsxX -l --tb=short --strict-markers --doctest-modules"
xfail_strict = "true"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.nitpick]
style = "https://gitea.radium.group/radium/project-configuration/raw/branch/master/nitpick/all.toml"

[flake8]
extend-ignore = ["D103", "D100"]

[tool.coverage.run]
include = ["src/*"]
omit = [
  "*/config.py",
  "*/main.py",
]

[tool.coverage.report]
exclude_lines = [
  "raise NotImplementedError",
  "pass",
  "pragma: no cover",
]
